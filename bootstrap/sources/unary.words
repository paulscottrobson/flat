// ***************************************************************************************
// ***************************************************************************************
//
//		Name : 		unary.words
//		Author :	Paul Robson (paul@robsons.org.uk)
//		Date : 		3rd December 2018
//		Purpose :	Source code for bootstrap : Unary words
//
// ***************************************************************************************
// ***************************************************************************************

@macro 	-- 										// decrement A
		dec 	hl

// =======================================================================================

@word 	- 										// negate (2's complement) A		
		ld 		a,h
		cpl
		ld 		h,a
		ld 		a,l
		cpl 
		ld 		l,a
		inc 	hl
		ret

// =======================================================================================

@macro 	++ 										// increment A
		inc 	hl

// =======================================================================================

@word 	0< 										// A = -1 if A < 0, 0 otherwise
		bit 	7,h
		ld 		hl,$0000
		ret 	z
		dec 	hl
		ret

// =======================================================================================

@word 	0= 										// A = -1 if A = 0, 0 otherwise
		ld 		a,h
		or 		l
		ld 		hl,$0000
		ret 	nz
		dec 	hl
		ret

// =======================================================================================

@macro 	2* 										// Scalars
		add 	hl,hl

@macro 	4* 								
		add 	hl,hl
		add 	hl,hl
		
@macro 	16* 								
		add 	hl,hl
		add 	hl,hl
		add 	hl,hl
		add 	hl,hl
		
// =======================================================================================

@macro 	2/ 										// Arithmetic right scalar
		sra 	h
		rr 		l

// =======================================================================================

@macro 	bswap 									// Swap byte halves
		ld 		a,h
		ld 		h,l
		ld 		l,a

// =======================================================================================

@word 	not 									// not (1's complement) A		
		ld 		a,h
		cpl
		ld 		h,a
		ld 		a,l
		cpl 
		ld 		l,a
		ret

		