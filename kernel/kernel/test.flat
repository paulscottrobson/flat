
:__con.colour 	variable 									// Writing colour in high byte.
:__con.pos 		variable 									// Screen position
:__con.base 	variable 									// Integer display base.

:con.colour ab>r 7 and bswap __con.colour !! r>ab ;

:con.blue ab>r 1 con.colour r>ab  ;
:con.red ab>r  2 con.colour r>ab  ;
:con.magenta ab>r  3 con.colour r>ab  ;
:con.green ab>r  4 con.colour r>ab  ;
:con.cyan ab>r  5 con.colour r>ab  ;
:con.yellow ab>r  6 con.colour r>ab  ;
:con.white ab>r 7 con.colour r>ab ;

:con.home ab>r 0 __con.pos !! r>ab ;

:con.clear 
	ab>r
		display.info 12 + @ con.raw.setmode
		con.white 0 con.home 
	r>ab
;

:con.emit.raw
	255 and __con.colour @@ + __con.pos @@ con.raw.char! 
	1 __con.pos +!	
	display.info 8 + @ 64- + __con.pos @@ = if con.clear then 
;

:con.cr
	ab>r 
	begin 
		32 con.emit.raw 
		display.info @ -- __con.pos @@ and 0=
	until
	r>ab
;

:__con.emit
	128 and if ; then
	swap 13 = if con.cr ; then
	swap 32 < if ; then	
	swap con.emit.raw
;

:con.emit ab>r __con.emit r>ab ;

:con.space ab>r 32 con.emit r>ab ;
:con.spaces ab>r if for con.space next then r>ab ;

:_con.print.string
	swap
	begin
		b>a c@ 0= if ; then
		b>a c@ con.emit
		swap ++ swap
	again
;

:con.print.string ab>r _con.print.string r>ab ;

:__con.digit	
	10 < 0= if swap 39 + swap then swap 48 + con.emit 
;

:__con.rec.print 
	ab>r __con.base @@ / if __con.rec.print then r>ab __con.base @@ mod __con.digit ;

:__con.print -if - __con.rec.print 45 con.emit ; then  __con.rec.print ;

:con.print.hex
	ab>r a>r 16 __con.base !! r>a __con.print r>ab ;
:con.print.dec
	ab>r a>r 10 __con.base !! r>a __con.print r>ab ;
:con.print.bin
	ab>r a>r 2 __con.base !! r>a __con.print r>ab ;


:__con.print.nibble 15 and __con.digit ;

:con.print.byte ab>r a>r 2/ 2/ 2/ 2/ __con.print.nibble r>a __con.print.nibble r>ab ;

:con.print.word bswap con.print.byte bswap con.print.byte ;

:_con.keyboard.state variable

:_con.get.change
	begin con.raw.inkey _con.keyboard.state @@ = 0= until swap _con.keyboard.state !! ;
:con.get
	begin _con.get.change until ;

:test
	con.clear con.cyan
	42 con.emit con.emit
	13 con.emit con.green
	43 con.emit
	con.cr
	44 con.emit 10 con.spaces 45 con.emit con.cr
	32766 con.yellow
	con.print.hex con.cr
	con.print.dec con.cr
	con.print.bin con.cr
	con.print.word con.cr
	con.print.byte con.cr
	con.get 
	con.print.byte
;

[test]