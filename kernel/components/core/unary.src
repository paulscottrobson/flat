; ***************************************************************************************
; ***************************************************************************************
;
;		Name : 		unary.src
;		Author :	Paul Robson (paul@robsons.org.uk)
;		Date : 		28th January 2019
;		Purpose :	Unary operators (A ? B -> A)
;
; ***************************************************************************************
; ***************************************************************************************

@macro 	--
		dec 	hl
@end

; ***************************************************************************************

@macro	---
		dec 	hl
		dec 	hl
@end

; ***************************************************************************************

@macro 	++
		inc 	hl
@end

; ***************************************************************************************

@macro	+++
		inc 	hl
		inc 	hl
@end

; ***************************************************************************************

@word 	0-
__negate:
		ld 		a,h
		cpl 
		ld 		h,a
		ld 		a,l
		cpl
		ld 		l,a
		inc 	hl
		ret
@end

; ***************************************************************************************

@word 	0<
		bit 	7,h
		ld 		hl,$0000
		ret 	z
		dec 	hl
		ret
@end

; ***************************************************************************************

@word 	0=
		ld 		a,h
		or 		l
		ld 		hl,$0000
		ret 	nz
		dec 	hl
		ret
@end

; ***************************************************************************************

@macro	2* 
		add 	hl,hl
@end

@macro	4* 
		add 	hl,hl
		add 	hl,hl
@end

@macro	8* 
		add 	hl,hl
		add 	hl,hl
		add 	hl,hl
@end

@macro	16*
		add 	hl,hl
		add 	hl,hl
		add 	hl,hl
		add 	hl,hl
@end

; ***************************************************************************************

@macro	2/ 
		sra 	h
		rr 		l
@end

@macro	4/
		sra 	h
		rr 		l
		sra 	h
		rr 		l
@end

; ***************************************************************************************

@word 	abs
		bit 	7,h
		ret		z
		jp 		__negate
@end

; ***************************************************************************************

@macro	bswap	
		ld 		a,l
		ld 		l,h
		ld 		h,a
@end

; ***************************************************************************************

@word 	not
		ld 		a,h
		cpl 
		ld 		h,a
		ld 		a,l
		cpl
		ld 		l,a
		ret
@end
