// ***************************************************************************************
// ***************************************************************************************
//
//		Name : 		misc.words
//		Author :	Paul Robson (paul@robsons.org.uk)
//		Date : 		15th January 2019
//		Purpose :	Source code for bootstrap : All the other words
//
// ***************************************************************************************
// ***************************************************************************************

@macro 	; 											// return from subroutine
		ret
		
// =======================================================================================

@macro  break 										// CSpect break
		db 		$DD,$01

// =======================================================================================

@word 	debug 										// Show debug information
		jp 		DEBUGShow

// =======================================================================================

@word 	c,											// Compile byte A
		jp 		FARCompileByteL

// =======================================================================================

@word 	, 											// Compile word A
		jp 		FARCompileWord

// =======================================================================================

@word copy
		ld 		bc,(Parameter)
		ld 		a,b 								// nothing to do.
		or 		c
		ret 	z

		push 	bc
		push 	de
		push 	hl

		xor 	a 									// find direction. 
		sbc 	hl,de
		ld 		a,h
		add 	hl,de
		bit 	7,a 								// if +ve use LDDR
		jr 		z,__copy2

		ex 		de,hl 								// LDIR etc do (DE) <- (HL)
		ldir
__copyExit:
		pop 	hl
		pop 	de
		pop 	bc
		ret

__copy2:		
		add 	hl,bc 								// add length to HL,DE, swap as LDDR does (DE) <- (HL)
		ex 		de,hl
		add 	hl,bc
		dec 	de 									// -1 to point to last byte
		dec 	hl
		lddr 
		jr 		__copyExit	

// =======================================================================================

@word fill
		ld 		bc,(Parameter)
		ld 		a,b 								// nothing to do.
		or 		c
		ret 	z
		push	bc
		push 	hl
		
__fill1:ld 		(hl),e
		inc 	hl
		dec 	bc
		ld 		a,b
		or 		c
		jr 		nz,__fill1

		pop 	hl
		pop 	bc
		ret

// =======================================================================================

@word 		halt 

__HaltLoop:
		di
		halt
		jr 		__HaltLoop

// =======================================================================================

@macro 		param!

		ld 		(Parameter),hl

// =======================================================================================

@word	compiles
		ld 		bc,(Here)
		dec 	bc
		dec 	bc
		dec 	bc
		ld 		(Here),bc
		ret		

// =======================================================================================

@word 	inkey	
		ex 		de,hl
		call 	IOScanKeyboard
		ld 		l,a
		ld 		h,0
		ret

